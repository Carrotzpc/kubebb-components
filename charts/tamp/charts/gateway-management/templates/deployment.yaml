apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: {{ .Values.gateway.name }}
  name:  {{ .Values.gateway.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.gateway.name }}
      name: {{ .Values.gateway.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.gateway.name }}
        name: {{ .Values.gateway.name }}
        version: v1
    spec:
      containers:
        - env:
            - name: MINIO_ENDPOINT
              value: "{{ .Values.global.minio.endpoint }}"
            - name: MINIO_KEY
              value: "{{ .Values.global.minio.key }}"
            - name: MINIO_SECRET
              value: "{{ .Values.global.minio.secret }}"
            - name: TEMPLATE_PATH
              value: /app/yamlTemplate/
            - name: TEMPLATE_TEMP_PATH
              value: /app/yamlTemplate
            - name: app.license.enabled
              value: "false"
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          name: {{ .Values.gateway.name }}
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 30
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - args:
            - minio server /data --console-address :9090
          command:
            - /bin/bash
            - -c
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: MINIO_ROOT_USER
              value: "{{ .Values.global.minio.key }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ .Values.global.minio.secret }}"
          name: {{ .Values.name }}
          resources: 
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data
              name: localvolume
      dnsPolicy: ClusterFirst
       {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: {{ .Values.mountPath.path }}
            type: DirectoryOrCreate
          name: localvolume
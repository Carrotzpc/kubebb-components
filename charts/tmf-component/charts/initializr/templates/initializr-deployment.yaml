{{- if .Values.global.host -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "tmf.initializr.labels" . | nindent 4 }}
    system/svcName: {{ include "tmf.initializr.fullname" . }}
  name: {{ include "tmf.initializr.fullname" . }}
  namespace: {{ include "tmf.initializr.namespace" . }}
spec:
  selector:
    matchLabels:
      app: {{ include "tmf.initializr.fullname" . }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        system/container-registry-map: '{"initializr-api":"default"}'
        system/registry: default
      labels:
        {{- include "tmf.initializr.labels" . | nindent 8 }}
    spec:
      containers:
        - image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: initializr-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ include "tmf.initializr.serviceAccountName" . }}
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
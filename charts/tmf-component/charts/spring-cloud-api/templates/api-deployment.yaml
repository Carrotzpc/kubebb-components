{{- if .Values.global.host -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "api.labels" . | nindent 4 }}
    system/svcName: {{ include "api.fullname" . }}
  name: {{ include "api.fullname" . }}
  namespace: {{ include "api.namespace" . }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.nameOverride }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        {{- include "api.labels" . | nindent 8 }}
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - msa-portal
                topologyKey: kubernetes.io/hostname
              weight: 10
      automountServiceAccountToken: true
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10

          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ include "api.fullname" . }}
      terminationGracePeriodSeconds: 30
{{- end -}}
{{- if .Values.global.host -}}
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "api.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className .Values.ingress.legacy }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ include "api.namespace" . }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (not .Values.ingress.legacy) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.hostName | quote }}
      http:
        paths:
          - backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
            path: {{ .Values.ingress.path }}
            pathType: {{ .Values.ingress.pathType }}
{{- end -}}
{{- end -}}
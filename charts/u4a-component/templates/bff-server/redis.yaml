apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff-server-session-redis
  namespace: {{ .Release.Namespace }}
  labels:
    app: bff-server
    name: bff-server-session-redis
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: bff-server-session-redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        imagetag_arch: amd64
        imagetag_os: linux
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        name: bff-server-session-redis
    spec:
      containers:
      - env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: bff-secret
              key: redis_password
        image: {{ .Values.registryServer }}/{{ .Values.bffServer.sessionImage }}
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - redis-cli config set requirepass $PASSWORD
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: bff-server-session-redis
  name: bff-server-session-redis
  namespace: {{ .Release.Namespace }}
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: tcp-redis-0
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    name: bff-server-session-redis
  sessionAffinity: None
  type: ClusterIP
